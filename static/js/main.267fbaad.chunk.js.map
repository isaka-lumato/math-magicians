{"version":3,"sources":["components/calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","props","state","result","numbers","map","number","type","className","verticalSymbols","symbol","this","id","react","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAEqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,GAHO,E,0CAOnB,WACE,IAAMC,EAAU,CAAC,KAAM,MAAO,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAI,SAACC,GAAD,OAAY,wBAAQC,KAAK,SAAsBC,UAAU,cAA7C,SAA4DF,GAAjCA,MACtGG,EAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKJ,KAAI,SAACK,GAAD,OAAY,wBAAQH,KAAK,SAAsBC,UAAU,eAA7C,SAA6DE,GAAlCA,MAC7F,OACE,sBAAKF,UAAU,aAAf,UACE,mBAAGA,UAAU,SAAb,SAAuBG,KAAKT,MAAMC,SAClC,sBAAKK,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAf,SAA2BC,IAC3B,sBAAKD,UAAU,kBAAf,UACGJ,EACD,wBAAQG,KAAK,SAAmBC,UAAU,cAAcI,GAAG,MAA3D,cAA0B,oB,GAlBEC,IAAMC,WCO/BC,MANf,WACE,OACE,cAAC,EAAD,KCSWC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.267fbaad.chunk.js","sourcesContent":["import react from 'react';\n\nexport default class Calculator extends react.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: 0,\n    };\n  }\n\n  render() {\n    const numbers = ['AC', '+/-', '%', 9, 8, 7, 6, 5, 4, 3, 2, 1, 0].map((number) => <button type=\"button\" key={number} className=\"innerButton\">{number}</button>);\n    const verticalSymbols = ['/', 'x', '-', '+', '='].map((symbol) => <button type=\"button\" key={symbol} className=\"cornerButton\">{symbol}</button>);\n    return (\n      <div className=\"calculator\">\n        <p className=\"screen\">{this.state.result}</p>\n        <div className=\"buttons\">\n          <div className=\"vertical\">{verticalSymbols}</div>\n          <div className=\"inner-container\">\n            {numbers}\n            <button type=\"button\" key=\"dot\" className=\"innerButton\" id=\"dot\">.</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import './App.css';\nimport Calculator from './components/calculator';\n\nfunction App() {\n  return (\n    <Calculator />\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}